What happens when you initialize a repository? Why do you need to do it?

Git creates the .git directory which contains metadata useful for Git to run and begins tracking every file in the directory.


How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area is different from the working directory and the repository in that it contains only those files that the user 
chose to include in the next commit.


How can you use the staging area to make sure you have one commit per logical change?

Separating the files that contain changes into logical blocks.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When you want to work on different versions of your project.


How do the diagrams help you visualize the branch structure?

The diagram helps understand how the commit history evolves and what the difference is between branches and commits.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is a version of the project which contains all changes from both branches.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Doing merges manually gives total control to the programmer to decide which changes to keep.


