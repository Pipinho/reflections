How did viewing a diff between two versions of a file help you see the bug that was introduced?

It helped me a lot because it made me pay attention easier on the differences between the two files,
which were the lines that introduced the bug.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

First of all, I will not be afraid any more of losing my changes. Whenever I want, I will have the opportunity 
to go and check whichever version of the file I desire. Secondly, easy access means I will not have to spend time
on memorizing different versions, since all versions will have the same name and each version can be easily spotted
by date.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having 
versions automatically saved, like Google Docs does?

You are in complete control of your work. You choose which is the best size for your commits and what changes will 
be included in them.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because each commit stores changes that are logically connected.


How can you use the commands git log and git diff to view the history of files?

"Git log" lists information about the different commits, while "git diff" shows the differences between two separate commits.


How might using version control make you more confident to make changes that could break something?

Being able to check previous versions of a file guarantees that whatever goes wrong, I can spot and fix it.


Now that you have your workspace set up, what do you want to try using Git for?

Learn some commands.


